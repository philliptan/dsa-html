/* -----------------------------
üî≤ CONTAINERS
- Responsive content bounds
----------------------------- */
.container {
  width: 100%;
  margin-inline: auto;
  padding-inline: var(--space-md);
  max-width: var(--container-lg);
}

@media (min-width: 768px) {
  .container {
    max-width: var(--container-xl);
  }
}

/* -----------------------------
üìê WRAPPER
- Generic flex or block wrapper
----------------------------- */
.wrapper {
  display: block;
  width: 100%;
  margin-inline: auto;
  padding-inline: var(--space-lg);
  max-width: var(--container-lg);
}

/* -----------------------------
üß± STACK
- Vertical spacing pattern
----------------------------- */
.stack {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.stack > * + * {
  margin-top: var(--space-md);
}

/* -----------------------------
üß© CLUSTER
- Horizontally grouped items (flex wrap)
----------------------------- */
.cluster {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-sm);
  align-items: center;
}

/* -----------------------------
‚ÜîÔ∏è CENTER
- Perfect centering (h+v)
----------------------------- */
.center {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

/* -----------------------------
üßç SPLIT
- Space-between layout pattern
----------------------------- */
.split {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--space-md);
}

/* -----------------------------
üî≥ GRID SYSTEM
----------------------------- */
.grid {
  display: grid;
  gap: var(--space-md);
}

/* Responsive grid variations */
.grid-2 { grid-template-columns: repeat(2, 1fr); }
.grid-3 { grid-template-columns: repeat(3, 1fr); }
.grid-4 { grid-template-columns: repeat(4, 1fr); }

@media (max-width: 768px) {
  .grid-2, .grid-3, .grid-4 {
    grid-template-columns: 1fr;
  }
}

/* -----------------------------
üß≠ REEL
- Horizontal scroll list (e.g., cards)
----------------------------- */
.reel {
  display: flex;
  overflow-x: auto;
  gap: var(--space-sm);
  scroll-snap-type: x mandatory;
  -webkit-overflow-scrolling: touch;
  padding-bottom: var(--space-sm);
}

.reel > * {
  flex: 0 0 auto;
  scroll-snap-align: start;
}

/* -----------------------------
ü™ü FRAME
- Aspect-ratio container
----------------------------- */
.frame {
  position: relative;
  width: 100%;
  padding-top: 56.25%; /* 16:9 */
}

.frame > * {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* -----------------------------
ü™ú SECTION & REGION SPACING
----------------------------- */
section, header, footer, main {
  padding-block: var(--space-2xl);
}

/* -----------------------------
üß≠ ALIGN HELPERS
----------------------------- */
.align-start { align-items: flex-start; }
.align-center { align-items: center; }
.align-end { align-items: flex-end; }

.justify-start { justify-content: flex-start; }
.justify-center { justify-content: center; }
.justify-end { justify-content: flex-end; }
.justify-between { justify-content: space-between; }

/* Constrain content width */
.measure-short { max-width: 40ch; }
.measure-medium { max-width: 60ch; }
.measure-long { max-width: 75ch; }

/* Fluid type scaling (clamp pattern) */
.text-fluid {
  font-size: clamp(1rem, 2vw + 0.5rem, 1.25rem);
}

/* Flow utility ‚Äì consistent vertical rhythm */
.flow > * + * {
  margin-top: var(--space-md);
}

/** Great for dashboards, docs pages, or marketing layouts. */
.layout-sidebar {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-md);
}

.layout-sidebar > :first-child {
  flex: 0 0 18rem; /* Sidebar width */
}

.layout-sidebar > :last-child {
  flex: 1;
  min-width: 15rem;
}

/*  Common for landing screens, hero banners, or ‚Äúempty state‚Äù pages.*/ 
.layout-cover {
  display: flex;
  flex-direction: column;
  min-block-size: 100vh;
  padding: var(--space-lg);
}

.layout-cover > * {
  margin-block: var(--space-md);
}

.layout-cover > :first-child {
  margin-block-end: auto; /* header */
}

.layout-cover > :last-child {
  margin-block-start: auto; /* footer */
}

.layout-cover > .center {
  margin-block: auto; /* center content */
}

/** erfect for navigation bars, product cards, or any ‚Äúadaptive‚Äù layout */
.layout-switcher {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-md);
}

.layout-switcher > * {
  flex-grow: 1;
  flex-basis: calc((30rem - 100%) * 999);
}

/** Ideal for image galleries, card collections, and responsive lists. */
.grid-auto {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr));
  gap: var(--space-md);
}


/* Great for full-width hero sections inside constrained layouts */
.bleed {
  margin-inline: calc(var(--space-lg) * -1);
}


.sticky-top {
  position: sticky;
  top: 0;
  z-index: var(--z-overlay);
  background: var(--color-bg);
}

.fixed-top {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: var(--z-overlay);
}


.fill {
  width: 100%;
  height: 100%;
}

.stretch {
  flex: 1;
}

/* -----------------------------
     üåê APP GRID LAYOUT
  ----------------------------- */
.app-grid {
  display: grid;
  grid-template-columns: 16rem 1fr;
  grid-template-rows: auto 1fr auto;
  min-height: 100vh;
  background-color: var(--color-bg);
}

.app-header {
  grid-column: 1 / -1;
  padding: var(--space-md);
  background-color: var(--color-surface);
  box-shadow: var(--shadow-sm);
  z-index: var(--z-overlay);
}

.app-drawer {
  grid-row: 2 / 3;
  background-color: var(--color-bg-alt);
  border-right: 1px solid var(--color-border);
  padding: var(--space-md);
  overflow-y: auto;
  transition: transform var(--duration-base) var(--ease-in-out);
}

.app-main {
  grid-row: 2 / 3;
  padding: var(--space-lg);
}

.app-footer {
  grid-column: 1 / -1;
  padding: var(--space-md);
  text-align: center;
  background-color: var(--color-surface);
  border-top: 1px solid var(--color-border);
}

/* -----------------------------
üì± RESPONSIVE BEHAVIOR
- Drawer becomes hidden off-canvas on small screens
----------------------------- */
@media (max-width: 768px) {
  .app-grid {
    grid-template-columns: 1fr;
  }

  .app-drawer {
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    width: 16rem;
    transform: translateX(-100%);
    box-shadow: var(--shadow-lg);
    z-index: var(--z-modal);
    background-color: var(--color-bg-alt);
  }

  .app-drawer.open {
    transform: translateX(0);
  }

  .app-main {
    padding: var(--space-md);
  }
}

/* -----------------------------
üéõÔ∏è Drawer toggle button
----------------------------- */
.drawer-toggle {
  background: none;
  border: none;
  cursor: pointer;
  font-size: var(--font-size-lg);
  color: var(--color-text);
  padding: var(--space-xs) var(--space-sm);
}

.drawer-backdrop {
  display: none;
}

@media (max-width: 768px) {
  .drawer-backdrop {
    display: none;
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.4);
    z-index: var(--z-overlay);
  }

  .drawer-backdrop.active {
    display: block;
  }
}

/* Component browser layout */
.toolbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--space-md);
  border-bottom: 1px solid var(--color-border);
  background: var(--color-surface);
}

.toolbar-actions button {
  margin-left: var(--space-sm);
}

.component-demo {
  padding: var(--space-lg);
  background: var(--color-bg);
  min-height: 300px;
}

.code-viewer {
  padding: var(--space-md);
  background: var(--color-surface-alt);
  border-top: 1px solid var(--color-border);
  overflow-x: auto;
  white-space: pre-wrap;
}

.hidden {
  display: none;
}
